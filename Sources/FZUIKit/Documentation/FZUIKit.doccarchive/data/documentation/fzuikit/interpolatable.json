{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Interpolatable"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/fzuikit\/interpolatable"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGQuaternion","doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3","doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector4"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/Interpolatable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A type that can be linearly interpolated."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Interpolatable"}],"title":"Interpolatable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:7FZUIKit14InterpolatableP","modules":[{"name":"FZUIKit"}],"navigatorTitle":[{"kind":"identifier","text":"Interpolatable"}]},"hierarchy":{"paths":[["doc:\/\/FZUIKit\/documentation\/FZUIKit"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/FZUIKit\/documentation\/FZUIKit\/Interpolatable\/FractionType"]},{"title":"Instance Methods","identifiers":["doc:\/\/FZUIKit\/documentation\/FZUIKit\/Interpolatable\/lerp(to:fraction:)"]}],"references":{"doc://FZUIKit/documentation/FZUIKit/Interpolatable/lerp(to:fraction:)":{"role":"symbol","title":"lerp(to:fraction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lerp"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fraction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FractionType","preciseIdentifier":"s:7FZUIKit14InterpolatableP12FractionTypeQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Linearly interpolates "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" to another instance of "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" based on a given fraction."}],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/Interpolatable\/lerp(to:fraction:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/fzuikit\/interpolatable\/lerp(to:fraction:)"},"doc://FZUIKit/documentation/FZUIKit/Interpolatable":{"role":"symbol","title":"Interpolatable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Interpolatable"}],"abstract":[{"type":"text","text":"A type that can be linearly interpolated."}],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/Interpolatable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Interpolatable"}],"url":"\/documentation\/fzuikit\/interpolatable"},"doc://FZUIKit/documentation/FZUIKit/Interpolatable/FractionType":{"role":"symbol","title":"FractionType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"FractionType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FloatingPoint","preciseIdentifier":"s:SF"}],"abstract":[{"type":"text","text":"The type of the fraction that will be used to linearly interpolate "},{"type":"codeVoice","code":"Self"},{"type":"text","text":"."}],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/Interpolatable\/FractionType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/fzuikit\/interpolatable\/fractiontype"},"doc://FZUIKit/documentation/FZUIKit/CGVector4":{"role":"symbol","title":"CGVector4","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CGVector4"}],"abstract":[],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector4","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CGVector4"}],"url":"\/documentation\/fzuikit\/cgvector4"},"doc://FZUIKit/documentation/FZUIKit/CGVector3":{"role":"symbol","title":"CGVector3","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CGVector3"}],"abstract":[{"type":"text","text":"This whole file exists basically because SIMD doesn’t support CGFloat and without this file, you’d be doing things like "},{"type":"codeVoice","code":"transform.position.x = Double(value)"},{"type":"text","text":" :("},{"type":"text","text":" "},{"type":"text","text":"So everything here just bridges CGFloats to Doubles and uses their simd equivalents."},{"type":"text","text":" "},{"type":"text","text":"Technically CGFloat can be Float or Double (32bit or 64bit) but everything is 64bit nowadays so, if it’s really necessary it can be added later."}],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CGVector3"}],"url":"\/documentation\/fzuikit\/cgvector3"},"doc://FZUIKit/documentation/FZUIKit":{"role":"collection","title":"FZUIKit","abstract":[],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit","kind":"symbol","type":"topic","url":"\/documentation\/fzuikit"},"doc://FZUIKit/documentation/FZUIKit/CGQuaternion":{"role":"symbol","title":"CGQuaternion","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CGQuaternion"}],"abstract":[],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGQuaternion","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CGQuaternion"}],"url":"\/documentation\/fzuikit\/cgquaternion"}}}