{"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3\/lerp(to:fraction:)"]}],"metadata":{"role":"collectionGroup","modules":[{"name":"FZUIKit"}],"title":"Interpolatable Implementations"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzuikit\/cgvector3\/interpolatable-implementations"]}],"identifier":{"url":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3\/Interpolatable-Implementations","interfaceLanguage":"swift"},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/FZUIKit\/documentation\/FZUIKit","doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3"]]},"references":{"doc://FZUIKit/documentation/FZUIKit/CGVector3":{"type":"topic","url":"\/documentation\/fzuikit\/cgvector3","abstract":[{"text":"This whole file exists basically because SIMD doesn’t support CGFloat and without this file, you’d be doing things like ","type":"text"},{"type":"codeVoice","code":"transform.position.x = Double(value)"},{"type":"text","text":" :("},{"text":" ","type":"text"},{"type":"text","text":"So everything here just bridges CGFloats to Doubles and uses their simd equivalents."},{"text":" ","type":"text"},{"type":"text","text":"Technically CGFloat can be Float or Double (32bit or 64bit) but everything is 64bit nowadays so, if it’s really necessary it can be added later."}],"navigatorTitle":[{"text":"CGVector3","kind":"identifier"}],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CGVector3","kind":"identifier"}],"title":"CGVector3","kind":"symbol","role":"symbol"},"doc://FZUIKit/documentation/FZUIKit":{"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/fzuikit","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit","abstract":[],"title":"FZUIKit"},"doc://FZUIKit/documentation/FZUIKit/CGVector3/lerp(to:fraction:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lerp","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7FZUIKit9CGVector3V","text":"CGVector3","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fraction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7FZUIKit9CGVector3V","kind":"typeIdentifier","text":"CGVector3"}],"type":"topic","url":"\/documentation\/fzuikit\/cgvector3\/lerp(to:fraction:)","kind":"symbol","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/CGVector3\/lerp(to:fraction:)","abstract":[{"type":"text","text":"Linearly interpolates "},{"code":"Self","type":"codeVoice"},{"type":"text","text":" to another instance of "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" based on a given fraction."}],"title":"lerp(to:fraction:)"}}}