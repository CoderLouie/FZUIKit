{"kind":"symbol","identifier":{"url":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/localMonitor(for:handler:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FZUIKit\/documentation\/FZUIKit","doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit","doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"localMonitor","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"mask","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSEvent","preciseIdentifier":"c:objc(cs)NSEvent"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@E@NSEventMask","text":"EventTypeMask","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"NSEvent","preciseIdentifier":"c:objc(cs)NSEvent"},{"text":"?))) -> ","kind":"text"},{"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/Monitor","text":"Monitor","preciseIdentifier":"s:So7NSEventC7FZUIKitE7MonitorC","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An event mask specifying which events you wish to monitor. See "},{"type":"codeVoice","code":"NSEvent.EventTypeMask"},{"text":" for possible values.","type":"text"}]}],"name":"mask"},{"content":[{"inlineContent":[{"text":"The event handler block object. It is passed the event to monitor. You can return the event unmodified, create and return a new ","type":"text"},{"type":"codeVoice","code":"NSEvent"},{"type":"text","text":" object, or return nil to stop the dispatching of the event."}],"type":"paragraph"}],"name":"handler"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The event monitor object.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Compared to ","type":"text"},{"code":"addLocalMonitorForEvents","type":"codeVoice"},{"text":", it will automatically remove the monitor on deinit.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Your handler will not be called for events that are consumed by nested event-tracking loops such as control tracking, menu tracking, or window dragging; only events that are dispatched through the applications ","type":"text"},{"code":"sendEvent(_:)","type":"codeVoice"},{"type":"text","text":" method will be passed to your handler."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Type Method","extendedModule":"AppKit","symbolKind":"method","modules":[{"relatedModules":["AppKit"],"name":"FZUIKit"}],"role":"symbol","title":"localMonitor(for:handler:)","externalID":"s:So7NSEventC7FZUIKitE12localMonitor3for7handlerAbCE0D0CSo0A4MaskV_ABSgABctFZ","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"localMonitor","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NSEvent","preciseIdentifier":"c:objc(cs)NSEvent","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSEventMask","text":"EventTypeMask"},{"kind":"text","text":", "},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"c:objc(cs)NSEvent","kind":"typeIdentifier","text":"NSEvent"},{"text":") -> (","kind":"text"},{"text":"NSEvent","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent"},{"text":"?))) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:So7NSEventC7FZUIKitE7MonitorC","text":"Monitor"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzuikit\/appkit\/nsevent\/localmonitor(for:handler:)"]}],"abstract":[{"type":"text","text":"Returns a local event monitor for the specified mask which receives copies of events the system posts to this app prior to their dispatch."}],"sections":[],"references":{"doc://FZUIKit/documentation/FZUIKit":{"kind":"symbol","role":"collection","abstract":[],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit","type":"topic","title":"FZUIKit","url":"\/documentation\/fzuikit"},"doc://FZUIKit/documentation/FZUIKit/AppKit/NSEvent":{"role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent"}],"title":"NSEvent","kind":"symbol","type":"topic","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent","url":"\/documentation\/fzuikit\/appkit\/nsevent","abstract":[],"navigatorTitle":[{"text":"NSEvent","kind":"identifier"}]},"doc://FZUIKit/documentation/FZUIKit/AppKit":{"type":"topic","abstract":[],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit","role":"collection","title":"AppKit","kind":"symbol","url":"\/documentation\/fzuikit\/appkit"},"doc://FZUIKit/documentation/FZUIKit/AppKit/NSEvent/Monitor":{"kind":"symbol","url":"\/documentation\/fzuikit\/appkit\/nsevent\/monitor","title":"NSEvent.Monitor","type":"topic","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/Monitor","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Monitor","kind":"identifier"}],"navigatorTitle":[{"text":"Monitor","kind":"identifier"}],"abstract":[{"text":"A local or global event monitor which calls a handler.","type":"text"},{"type":"text","text":" "},{"text":"A local or global event monitor which calls a handler.","type":"text"}],"role":"symbol"},"doc://FZUIKit/documentation/FZUIKit/AppKit/NSEvent/localMonitor(for:handler:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localMonitor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent"},{"kind":"text","text":"."},{"text":"EventTypeMask","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSEventMask"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"c:objc(cs)NSEvent","kind":"typeIdentifier","text":"NSEvent"},{"kind":"text","text":") -> ("},{"text":"NSEvent","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent"},{"kind":"text","text":"?))) -> "},{"kind":"typeIdentifier","text":"Monitor","preciseIdentifier":"s:So7NSEventC7FZUIKitE7MonitorC"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/localMonitor(for:handler:)","type":"topic","title":"localMonitor(for:handler:)","url":"\/documentation\/fzuikit\/appkit\/nsevent\/localmonitor(for:handler:)","abstract":[{"type":"text","text":"Returns a local event monitor for the specified mask which receives copies of events the system posts to this app prior to their dispatch."}]}}}