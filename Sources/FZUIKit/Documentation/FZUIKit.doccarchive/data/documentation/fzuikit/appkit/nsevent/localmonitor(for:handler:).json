{"abstract":[{"type":"text","text":"Returns a local event monitor for the specified mask which receives copies of events the system posts to this app prior to their dispatch."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"localMonitor","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"mask"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"EventTypeMask","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSEventMask"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent"},{"text":") -> (","kind":"text"},{"text":"NSEvent","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent"},{"kind":"text","text":"?))) -> "},{"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/Monitor","preciseIdentifier":"s:So7NSEventC7FZUIKitE7MonitorC","text":"Monitor","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An event mask specifying which events you wish to monitor. See ","type":"text"},{"type":"codeVoice","code":"NSEvent.EventTypeMask"},{"type":"text","text":" for possible values."}]}],"name":"mask"},{"name":"handler","content":[{"inlineContent":[{"text":"The event handler block object. It is passed the event to monitor. You can return the event unmodified, create and return a new ","type":"text"},{"code":"NSEvent","type":"codeVoice"},{"text":" object, or return nil to stop the dispatching of the event.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"The event monitor object.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Compared to "},{"type":"codeVoice","code":"addLocalMonitorForEvents"},{"type":"text","text":", it will automatically remove the monitor on deinit."}]},{"inlineContent":[{"type":"text","text":"Your handler will not be called for events that are consumed by nested event-tracking loops such as control tracking, menu tracking, or window dragging; only events that are dispatched through the applications "},{"code":"sendEvent(_:)","type":"codeVoice"},{"text":" method will be passed to your handler.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzuikit\/appkit\/nsevent\/localmonitor(for:handler:)"]}],"metadata":{"title":"localMonitor(for:handler:)","extendedModule":"AppKit","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localMonitor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NSEvent","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@E@NSEventMask","kind":"typeIdentifier","text":"EventTypeMask"},{"kind":"text","text":", "},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"NSEvent","preciseIdentifier":"c:objc(cs)NSEvent","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent"},{"text":"?))) -> ","kind":"text"},{"text":"Monitor","kind":"typeIdentifier","preciseIdentifier":"s:So7NSEventC7FZUIKitE7MonitorC"}],"symbolKind":"method","modules":[{"relatedModules":["AppKit"],"name":"FZUIKit"}],"role":"symbol","roleHeading":"Type Method","externalID":"s:So7NSEventC7FZUIKitE12localMonitor3for7handlerAbCE0D0CSo0A4MaskV_ABSgABctFZ"},"sections":[],"hierarchy":{"paths":[["doc:\/\/FZUIKit\/documentation\/FZUIKit","doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit","doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/localMonitor(for:handler:)"},"references":{"doc://FZUIKit/documentation/FZUIKit/AppKit":{"abstract":[],"type":"topic","role":"collection","kind":"symbol","title":"AppKit","url":"\/documentation\/fzuikit\/appkit","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit"},"doc://FZUIKit/documentation/FZUIKit/AppKit/NSEvent/Monitor":{"kind":"symbol","abstract":[{"type":"text","text":"A local or global event monitor which calls a handler."},{"type":"text","text":" "},{"text":"A local or global event monitor which calls a handler.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Monitor","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Monitor"}],"identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/Monitor","url":"\/documentation\/fzuikit\/appkit\/nsevent\/monitor","title":"NSEvent.Monitor","type":"topic"},"doc://FZUIKit/documentation/FZUIKit/AppKit/NSEvent":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSEvent","kind":"identifier","text":"NSEvent"}],"url":"\/documentation\/fzuikit\/appkit\/nsevent","title":"NSEvent","role":"symbol","kind":"symbol","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NSEvent"}],"abstract":[]},"doc://FZUIKit/documentation/FZUIKit/AppKit/NSEvent/localMonitor(for:handler:)":{"kind":"symbol","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit\/AppKit\/NSEvent\/localMonitor(for:handler:)","role":"symbol","type":"topic","url":"\/documentation\/fzuikit\/appkit\/nsevent\/localmonitor(for:handler:)","abstract":[{"text":"Returns a local event monitor for the specified mask which receives copies of events the system posts to this app prior to their dispatch.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"localMonitor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSEvent","text":"NSEvent","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@E@NSEventMask","text":"EventTypeMask","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"NSEvent","preciseIdentifier":"c:objc(cs)NSEvent","kind":"typeIdentifier"},{"kind":"text","text":") -> ("},{"text":"NSEvent","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSEvent"},{"text":"?))) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Monitor","preciseIdentifier":"s:So7NSEventC7FZUIKitE7MonitorC"}],"title":"localMonitor(for:handler:)"},"doc://FZUIKit/documentation/FZUIKit":{"role":"collection","title":"FZUIKit","abstract":[],"url":"\/documentation\/fzuikit","kind":"symbol","identifier":"doc:\/\/FZUIKit\/documentation\/FZUIKit","type":"topic"}}}